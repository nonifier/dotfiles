- defaults:
    link:
      create: true
      relink: true
      force: true

- clean: ["~"]

- link:
    ~/.bashrc: config/bash/bashrc
    ~/.inputrc: config/inputrc
    ~/.config/alacritty: config/alacritty
    ~/.config/bash: config/bash
    #~/.config/i3: config/i3
    ~/.config/nvim: config/nvim
    #~/.config/polybar: config/polybar
    #~/.config/rofi: config/rofi
    #~/.config/wallpapers: config/wallpapers
    ~/.config/powerline-shell/config.json: config/powerline-shell/config.json
    ~/.gdbinit: config/gdbinit
    ~/.gitconfig: config/git/gitconfig
    ~/.gitignore: config/git/gitignore
    ~/.pdbrc.py: config/pdbrc.py
    ~/.ssh/config: config/ssh/config
    ~/.local/bin/pass-4-ssh.sh: config/ssh-add-pass/pass-4-ssh.sh
    ~/.local/bin/ssh-add-4-pass: config/ssh-add-pass/ssh-add-4-pass

- shell:
    - [sudo snap install nvim --classic, Install NeoVim]
    - [sudo snap install ripgrep --classic, Install RG]
    - [sudo snap install slack, Install Slack]
    - [sudo snap install spotify, Install Spotify]
    - description: == Configure APT repo
      command: |
        ## sudo add-apt-repository ppa:git-core/ppa
        ## sudo apt update

    - description: == Install packages
      command: |
        sudo apt install -y \
          ca-certificates \
          curl \
          fd-find \
          fzf \
          git \
          git-lfs \
          gnupg \
          htop \
          httpie \
          libssl-dev \
          lsb-release \
          pass \
          pipx \
          plocate \
          python-is-python3 \
          python3-full \
          ssh \
          wget \
        && pipx install \
          awscli \

    - description: == Install Dev packages ==
      command: |
        sudo apt install -y \
          apt-utils \
          bison \
          build-essential \
          cargo \
          clang clang-tidy clang-format \
          cmake \
          cmake-curses-gui \
          curl \
          doxygen \
          ffmpeg \
          flex \
          graphviz \
          hdf5-tools \
          libboost-all-dev \
          libcanberra-gtk-module \
          libceres-dev \
          libeigen3-dev \
          libfreetype-dev \
          libglew-dev \
          libglfw3-dev \
          libgmock-dev \
          libgtest-dev \
          libhdf5-dev \
          libimgui-dev \
          libogre-1.12-dev \
          libopencv-dev \
          libprotobuf-dev \
          libusb-1.0-0-dev \
          luarocks \
          ninja-build \
          nodejs \
          npm \
          pandoc \
          protobuf-compiler \
          python3-dev \
          python3-pip \
          python3-venv \
          software-properties-common \
          unzip \

    - description: == Install Nerd Fonts ==
      command: |
        mkdir -p ~/.fonts
        [[ -f ~/.fonts/JetBrainsMonoNLNerdFontMono-Regular.ttf ]] || \
        ( 
          wget -qO- "https://github.com/ryanoasis/nerd-fonts/releases/latest/download/JetBrainsMono.tar.xz" | tar xvJ -C ~/.fonts/
          fc-cache -fv ~/.fonts
        )

    - description: == Install LaziGit ==
      command: |
        LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[^"]*')
        mkdir -p ~/.local/share/lazygit
        wget -qO- "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz" | tar xvz -C ~/.local/share/lazygit
        ( cd ~; install ~/.local/share/lazygit/lazygit ~/.local/bin/ )

    #- description: == Install nvim plug
    #command: |
    #mkdir -p $HOME/.local/share/nvim/site/autoload
    #[[ -f $HOME/.local/share/nvim/site/autoload/plug.vim ]] || curl -L "https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim" > $HOME/.local/share/nvim/site/autoload/plug.vim

    - description: == Install Powerline
      stdout: true
      stderr: true
      command: |
        sudo apt install -y powerline-gitstatus python3-powerline fonts-powerline
        [[ -d /usr/src/powerline-shell ]] || sudo git clone https://github.com/b-ryan/powerline-shell /usr/src/powerline-shell
        cd /usr/src/powerline-shell && sudo python setup.py install

    - description: == Install Docker
      command: |
        sudo mkdir -m 0755 -p /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --yes --dearmor -o /etc/apt/keyrings/docker.gpg
        if [[ ! -f /etc/apt/sources.list.d/docker.list ]]; then \
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt update
        fi
        sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
        sudo groupadd docker
        sudo usermod -aG docker $USER
        newgrp docker

      #- description: == Configure alternatives
      #command: sudo update-alternatives --install /usr/bin/clangd clangd /usr/bin/clangd-9 900
      #&& sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-9 900 --slave /usr/bin/clang++ clang++ /usr/bin/clang++-9
      #-
      #command:
      #       sudo apt install -y i3 feh alacritty compton rofi
      #description: == Colour manager (ie. https://github.com/dylanaraps/pywal/wiki/Installation#table-of-contents)
      #
    - description: Password-store
      command: |
        [[ -d ~/.password-store/ ]] || git clone git@github.com:nonifier/password-store.git ~/.password-store/

    - description: Password-store host app for Firefox
      command: |
        [[ -f ~/.mozilla/native-messaging-hosts/passff.py ]] || (curl -sSL github.com/passff/passff-host/releases/latest/download/install_host_app.sh | bash -s -- firefox)

    - description: SSH Setup
      command: |
        mkdir -p ~/.ssh/{nonifier,prophesee} # Creating SSH folders 
        chmod 0700 ~/.ssh/{nonifier,prophesee} # Setting permissions
        [[ -f ~/.ssh/nonifier/id_rsa ]] || pass ssh/id_rsa > ~/.ssh/nonifier/id_rsa | head -n +3; chmod 600 ~/.ssh/nonifier/id_rsa
        [[ -f ~/.ssh/nonifier/id_rsa.pub ]] || pass ssh/id_rsa.pub > ~/.ssh/nonifier/id_rsa.pub
        [[ -f ~/.ssh/prophesee/id_ed25519 ]] || pass prophesee/ssh/id_ed25519.priv > ~/.ssh/prophesee/id_ed25519; chmod 600 ~/.ssh/prophesee/id_ed25519
        [[ -f ~/.ssh/prophesee/id_ed25519.pub ]] || pass prophesee/ssh/id_ed25519.pub > ~/.ssh/prophesee/id_ed25519.pub

    - description: Trust Key
      command: |
        [[ -f ~/.gnupg/woam@nonifier.com.priv ]] || echo "Please install ~/.gnupg/woam@nonifier.com.priv"
        [[ -f ~/.gnupg/woam@nonifier.com.priv ]] && gpg --import ~/.gnupg/woam@nonifier.com.priv && echo $(gpg --list-keys | rg -B1 woam@nonifier | head -1 | tr -d '[:space:]'):6: | gpg --import-ownertrust
